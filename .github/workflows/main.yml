name: calculate-ci-job
on:  
  push:
    branches-ignore: [ master ]
  pull_request:   
    branches-ignore: [ master ]
  schedule: 
    - cron:  '0 1 * * *'
       
jobs: 
  build-jdk8:
    runs-on: ${{ matrix.os }}
    strategy:
     max-parallel: 3
     fail-fast: false
     #GitHub-hosted runners, possible to add: windows-latest
     matrix:
       os: [ubuntu-latest]
          
    name: calculate-ci-job
    steps:
    - name: Checkout
      uses: actions/checkout@v1
         
    - name: Setup JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Setup JFrog CLI
      uses: jfrog/setup-jfrog-cli@v1
      env:
        JF_ARTIFACTORY_1: ${{ secrets.JF_ARTIFACTORY_SECRET_1 }}
        M2_HOME: /usr/local/apache-maven/apache-maven-3.6.3 
        
    - name: Ping JFrog CLI
      run: jfrog rt ping
      
    # if pushed from a feature branch, should create a proper repository in artifactory for that  
    - if: github.ref != 'refs/heads/master'
      name: Feature Branch Repository Creation
      run: |
        echo "::set-env name=repository::$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')"
        echo $repository
        jfrog rt rc local-repo-template.json --vars key1=auto-cli-local-״$(echo $repository)״
        jfrog rt rc virtual-repo-template.json --vars key1=auto-cli-virtual-״$(echo $repository)״

    - if: ${{ failure() }}
      name: Feature Branch Repository Update
      run: |
        echo "::set-env name=repository::$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')"
        echo $repository

    # if pushed from a master branch, should delete the proper repository in artifactory
    - if: github.ref == 'refs/heads/master'
      name: Feature Branch Repository Deletion
      run: |
        echo "$(echo ${GITHUB_REF##*/})" 
    
    - if: always()
      name: Build & Deploy
      run: |
        echo $repository
        cd maths && jfrog rt mvn -Dproject.repository.name=${repository} clean install
        
    - if: github.ref == 'refs/heads/master'
      name: Publish Build Information
      run: |
        # Collect environment variables for the build
        jfrog rt bce
        # Collect VCS details from git and add them to the build
        jfrog rt bag
        # Publish build info
        jfrog rt bp       
        
    - if: github.ref == 'refs/heads/master'
      name: Xray Scan
      run: |
        jfrog rt bs
        
    - if: github.ref == 'refs/heads/master'
      name: Build Promotion
      run: |
        jfrog rt bpr calculate-ci-job ${{ github.sha }} libs-release-staging --props=artifact.maturity=staging
